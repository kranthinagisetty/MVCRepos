@model CareDataModels.Models.Patient

@{
    ViewBag.Title = "Edit Patient";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section leftMenu
{
<div>
    @Html.Partial("AdminMenu")
</div>

    }


<div class="banner_section">
    <img src="~/Images/banner_img1.jpg" alt="" />
    <div class="page_direction">
        <a href="@Url.Action("AppointmentsList", "Admin")" title="Home" style="text-decoration:none"> Home ></a>
        <a href="@Url.Action("PatientsList", "Admin")" title="Patients" style="text-decoration:none"> Patients></a>
        <a href="@Url.Action("PatientInfo", "Admin", new { id = Model.PatientID })" title="Patient Info" style="text-decoration:none"> PatientInfo ></a>
        EditPatient
    </div>
</div>

<div class="content_wrapper fancy_fields">
    <div class="row">
        <h2>  Edit Patient</h2>


    @using (Html.BeginForm("EditPatient", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
       @Html.Partial("PartialValidationSummary")
        @Html.HiddenFor(model => model.PatientID)

            <div class="row two_col_form_container">

                <div class="col">
                    <span class="red">*</span>  @Html.LabelFor(model => model.FirstName, "First Name")
                    @Html.EditorFor(model => model.FirstName)
                    @*@Html.ValidationMessageFor(model => model.FirstName)*@
                </div>
                <div class="col">
                    <span class="red">&nbsp;</span>   @Html.LabelFor(model => model.LastName, "Last Name")
                    @Html.EditorFor(model => model.LastName)
                    @*@Html.ValidationMessageFor(model => model.LastName)*@
                </div>
                <div class="col">

                    <span class="red">*</span>   @Html.LabelFor(model => model.DOB, "Date of Birth")
                    @Html.EditorFor(model => model.DOB)
                    @*@Html.ValidationMessageFor(model => model.DOB)*@

                </div>
                <div class="col">
                    <span class="red">*</span>   @Html.LabelFor(model => model.Password)
                    @Html.PasswordFor(model => model.Password)
                    @*@Html.ValidationMessageFor(model => model.Password)*@
                </div>
                <div class="col">
                    <span class="red">*</span>   @Html.LabelFor(model => model.Phone)
                    @Html.EditorFor(model => model.Phone)
                    @*@Html.ValidationMessageFor(model => model.Phone)*@
                </div>
                <div class="col">
                    <span class="red">*</span>   @Html.LabelFor(model => model.Email)
                    @Html.EditorFor(model => model.Email)

                </div>
                <div class="col">
                    <span>&nbsp;&nbsp;</span>  @Html.LabelFor(model => model.Profession)
                    @Html.EditorFor(model => model.Profession)
                    @*@Html.ValidationMessageFor(model => model.Profession)*@
                </div>
                <div class="col">
                    <span>&nbsp;&nbsp;</span>   @Html.LabelFor(model => model.Gender)
                    @Html.DropDownListFor(model => model.Gender, new List<SelectListItem>() { new SelectListItem { Text = "Male", Value = "Male" }, new SelectListItem { Text = "Female", Value = "Female" } })
                    @*@Html.ValidationMessageFor(model => model.Gender)*@
                </div>
                <div class="col">
                    <span class="red">*</span>   @Html.LabelFor(model => model.AddressLine1, "Address")
                    @Html.TextAreaFor(model => model.AddressLine1, new { @class = "multilineTextArea" })
                    @*@Html.ValidationMessageFor(model => model.AddressLine1)*@
                </div>
                <div class="col">
                    <span class="red">*</span>   @Html.Label("Country")
                    @Html.DropDownListFor(model => model.AddressLine2, (IEnumerable<SelectListItem>)ViewBag.Country, "--Choose Your Country--", new { @id = "ddlCountry", @onchange = "javascript:GetStates(this.value);" })

                </div>
                <div class="col">
                    <span class="red">*</span>   @Html.Label("State")
                    @Html.DropDownList("State", (List<SelectListItem>)ViewBag.States, "--Choose Your State--", new { @id = "ddlstate", @onchange = "javascript:GetCities(this.value);" })
                </div>
                <div class="col">
                    <span class="red">*</span>   @Html.Label("City")
                    @Html.DropDownList("City", (IEnumerable<SelectListItem>)ViewBag.Cities, "--Choose Your City--", new { @id = "ddlCity" })

                </div>
                <div class="col">
                    <span class="red">*</span>    @Html.LabelFor(model => model.ZipCode)
                    @Html.TextBoxFor(model => model.ZipCode)
                    @*@Html.ValidationMessageFor(model => model.ZipCode)*@
                </div>
                <div class="col">
                    <span>&nbsp;&nbsp;</span>  @Html.Label("Patient Photo")
                    <input type="file" id="PatientImage" name="upload" class="prescriptionuploadcontrol" />
                </div>
                <div class="clr"></div>
                <div class="col">
                    <input  type="submit" value="Submit" />
                </div>

            </div>

            @*<div id="divLoading">
                <p style="position: absolute; top: 30%; left: 45%; color: White;">
                    Loading, please wait...
                    <img src="~/Images/ajax-load.gif" width="50px" height="50px" />
                </p>
            </div>*@

        }


    </div>
</div>


@section Scripts {
    <script type="text/javascript">

        $(document).ready(function () {
            $("#DOB").datepicker({
                beforeShow: function (textbox, instance) {
                    instance.dpDiv.css({ marginTop: (-textbox.offsetHeight) + 'px', marginLeft: textbox.offsetWidth + 'px' })
                },
                dateFormat: 'dd/M/yy',
                changeMonth: true,
                changeYear: true
            });
        });



    function GetStates(_Id) {

        var procemessage = "<option value='0'> Please wait...</option>";
        var ddlStates = $("#ddlstate");

        $("#ddlcity").html(procemessage).show();

        var url = "/Admin/GetStates/";

        $.ajax({
            cache: false,
            type: "GET",
            url: '@Url.Action("GetStates", "Admin")',
                data: { "id": _Id },
                success: function (data) {

                    ddlStates.html('');

                    $.each(data, function (id, option) {

                        ddlStates.append($('<option></option>').val(option.id).html(option.name));

                    });


                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to retrieve states.');

                }
            });



        }


        function GetCities(_Id) {

            var procemessage = "<option value='0'> Please wait...</option>";
            var ddlcity = $("#ddlCity");

            $("#ddlcity").html(procemessage).show();
            $.ajax({
                cache: false,
                type: "GET", 
                url: '@Url.Action("GetCities", "Admin")',
                data: { "id": _Id },
                success: function (data) {
                    ddlcity.html('');

                    $.each(data, function (id, option) {

                        ddlcity.append($('<option></option>').val(option.id).html(option.name));

                    });


                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to retrieve cities.');

                }
            });



        }


    </script>
}
